#
# Copyright 2008-2010 Microarray Informatics Team, EMBL-European Bioinformatics Institute
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# For further details of the Gene Expression Atlas project, including source code,
# downloads and documentation, please see:
#
# http://gxa.github.com/gxa
#

# atlas version
atlas.software.version=${versionDescriptor}
atlas.software.date=${buildDate}

# properties for calibrating efv display in interface
atlas.ignore.efs.facet=time,age,ALL
atlas.ignore.efs.anycondition=time,age
atlas.ignore.efs.options=rnai,time,age
atlas.ignore.efs.gene.heatmap=age,time,dose
# This property is used in heatmap to restrict the amount of efvs to be shown per ef by default
atlas.max.efvs.per.ef.in.heatmap=3

# The two atlas.structured.query.max.* restrictions below ensure that Atlas can handle user queries in a timely fashion.
# They have different effect on API and web queries though. When the limit below are exceeded:
# - In web queries: pval/tstats are not retrieved from bit index on thus not used for ordering of bioentities in heatmaps
#   (experiment counts only are used to order heatmaps in that case).
# - In API queries (where min up/down pvals are output by default and thus always have to be retrieved) an error message
#   is presented to the user asking them to restrict the query.
#
#   Examples of API queries which exceed the limits below:
#       - gxa/api/v1?geneIsNot=cell+cycle       (gene only query hence no efo's included;                    heatmap experiment count: 32363)
#       - gxa/api/v1?geneDiseaseIs=cancer       (gene only query hence no efo's included;                    heatmap experiment count: 22170)
#       - gxa/api/v1?geneIs=kinase              (gene only query hence no efo's included;                    heatmap experiment count: 30609)
#       - gxa/api/v1?upDownIn=cancer+cell+line  (query matches more than 120 efvs hence no efo's included;   heatmap experiment count: 5921)
#       - gxa/api/v1?upDownIn=organism+part     (query matches 78 efvs hence efo's are included;             heatmap experiment count: 6795;
#                                                                                                                   number of efo mappings: 8054)
#
#   Examples of API queries that do not exceed the limits below:
#       - gxa/api/v1?upDownIn=brain             (query matches 112 efvs hence efo's are included;            heatmap experiment count: 2994;
#                                                                                                                   number of efo mappings: 552)
#       - gxa/api/v1?upDownIn=chemical+compound (query matches 20 efvs hence efo's are included;             heatmap experiment count: 3240;
#                                                                                                                   number of efo mappings: 845)
#
# This restriction refers to the overall experiment count for (max. atlas.query.pagesize) sorted bioentities to be displayed
# in a heatmap. This value is a crude (though more accurate than the overall amount of genes matched by user's query) measure of
# the cost of constructing a heatmap, short of actually constructing that heatmap.
atlas.structured.query.max.experiment.count=4000
# This restriction refers to the total amount of mappings for all efo's to be shown in heatmap to their experiment-efv pairs.
# This again is a crude measure of how much work AtlasStatisticsQueryService will need to perform in order to retrieve experiment
# counts and pvals/tstats from bit index, for each cell of the heatmap.
atlas.structured.query.max.efo.mappings.count=1000

# export properties
atlas.dump.geneidentifiers=dbxref,embl,ensfamily,ensembl,ensgene,ensprotein,enstranscript,go,image,interpro,pfam,locuslink,omim,orf,refseq,unigene,uniprot,hmdb,chebi,cas,uniprometenz,mirna,prerna mirna,prerna,entrez,entrez_protein,genbank,pubmedids,tair,scop,hgnc,ec,locus,mgd,pkr_hanks,cp450,swall,mgi_id,genesigdb
atlas.dump.exclude.fields=blocks,designelement,mirbase: description,mirbase: matured mirna,mirbase: sequence,mirbase: accession number,sequence,a-mexp-86: sequence,a-mexp-258: sequence,a-mexp-620: sequence,a-mexp-717: sequence,a-mexp-1140: sequence,keyword
atlas.dump.geneidentifiers.filename=gene_identifiers.txt
atlas.dump.ebeye.filename=ebeye_export.xml.zip
atlas.experiments.properties.dump.filename=experiment_properties.txt
atlas.experiments.dump.ebeye.filename=ebeye_experiments_export.xml
atlas.genes.dump.ebeye.filename=ebeye_genes_export.xml
atlas.query.default.pagesize=50
atlas.api.query.maximum.pagesize=200

atlas.drilldowns.mingenes=10
atlas.query.listsize=10
atlas.query.expsPerGene=10
atlas.dasdsn=gxa
atlas.gene.list.autogenerate.cache=false
atlas.gene.list.autogenerate.afterindex=false
atlas.dasbase=http://www.ebi.ac.uk/gxa
atlas.dasfactors=organism_part,disease_state,cell_type,cell_line,compound,developmental_stage,infect,phenotype

atlas.gene.autocomplete.ids=dbxref,embl,ensfamily,ensfamily_description,ensgene,ensprotein,enstranscript,go,image,interpro,locuslink,omim,orf,refseq,unigene,uniprot,hmdb,chebi,cas,uniprometenz,designelement,mgi_id,genesigdb
atlas.gene.autocomplete.ids.limit=3
atlas.gene.autocomplete.names=synonym
atlas.gene.autocomplete.names.limit=7
# The following setting limits the number of autocomplete items per species, if items associated with more than one species
# appear in the autocomplete list. This is to avoid atlas.gene.autocomplete.names.limit being exhausted by items
# associated with the first species in atlas.gene.autocomplete.species.order.
atlas.gene.autocomplete.names.per_species.limit=2
atlas.gene.autocomplete.descs=disease,goterm,interproterm,keyword,proteinname
atlas.gene.autocomplete.descs.limit=-1
atlas.gene.autocomplete.species.order=human,homo,mus,rattus
atlas.googleanalytics.account=XX-000000-0

atlas.gene.drilldowns=disease,goterm,interproterm,keyword,proteinname

# data release - data version number (usually year.month, will be overridden by what's in the database)
atlas.data.release=10.5
# data release last date must be in MM-YYYY format; used to compute number of new experiments since last release
atlas.data.release.lastdate=01-2003

atlas.feedback.smtp.host=smtp.ebi.ac.uk
atlas.feedback.from.address=arrayexpress-atlas@ebi.ac.uk
atlas.feedback.to.address=atlas-feedback@ebi.ac.uk
atlas.feedback.subject=Gene Expression Atlas Feedback

atlas.loader.possible.qtypes=AFFYMETRIX_VALUE,CHPSignal,rma_normalized,gcRMA,signal,value,quantification
atlas.loader.gene.identifier.priority=ensembl,uniprot

atlas.gene.properties.tooltip.display=goterm,interproterm
atlas.gene.properties.genepage.ignore=keyword
atlas.gene.properties.genepage.displaydefault=disease,goterm,interproterm,uniprot
atlas.gene.properties.api.ignore=keyword

atlas.admin.password=password

atlas.config.dir=conf/atlas
atlas.look.cache.enabled=true
atlas.look.templates.path=classpath:/look/templates.stg
atlas.look.resources.dir=

# number of threads to use in gene index builder
atlas.indexbuilder.geneindex.numthreads=16

# number of genes to retrieve from db in one chunk for indexing
atlas.indexbuilder.geneindex.chunksize=1000

# number of genes added to index between commits
atlas.indexbuilder.geneindex.commitfreq=10000

# MOTD (Message Of The Day) - somethign to display on the Atlas home page
atlas.look.motd=

# Alert Notice - to display in red on the Atlas home page
atlas.look.alertnotice=

#data source for incremental updates
atlas.masteratlas=http://localhost:8080/gxa/

# R cloud-related properties
atlas.rservice.biocep.db.driver=oracle.jdbc.OracleDriver
atlas.rservice.biocep.db.type=oracle
atlas.rservice.biocep.killused=true
atlas.rservice.biocep.naming.mode=db
atlas.rservice.biocep.provider.factory=uk.ac.ebi.rcloud.rpf.db.ServantsProviderFactoryDB
atlas.rservice.mode=biocep
atlas.rservice.rlibdir=
