<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright 2008-2010 Microarray Informatics Team, EMBL-European Bioinformatics Institute
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
~
~
~ For further details of the Gene Expression Atlas project, including source code,
~ downloads and documentation, please see:
~
~ http://gxa.github.com/gxa
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/jee
http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="threadPool" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool"
          destroy-method="shutdown">
        <constructor-arg index="0" value="12" type="int"/>
    </bean>
    <!-- Spring config for Atlas -->

    <!-- SOLR index -->
    <bean id="solrContainerFactory" class="uk.ac.ebi.gxa.index.SolrContainerFactory">
        <property name="atlasIndex" ref="atlasIndex"/>
        <property name="templatePath" value="solr"/>
    </bean>

    <bean name="solrContainer"
          factory-bean="solrContainerFactory"
          factory-method="createContainer"
          destroy-method="shutdown"/>

    <bean name="solrServerAtlas" class="org.apache.solr.client.solrj.embedded.EmbeddedSolrServer">
        <constructor-arg ref="solrContainer"/>
        <constructor-arg value="atlas"/>
    </bean>

    <bean name="solrServerExpt" class="org.apache.solr.client.solrj.embedded.EmbeddedSolrServer">
        <constructor-arg ref="solrContainer"/>
        <constructor-arg value="expt"/>
    </bean>

    <bean name="solrServerProp" class="org.apache.solr.client.solrj.embedded.EmbeddedSolrServer">
        <constructor-arg ref="solrContainer"/>
        <constructor-arg value="properties"/>
    </bean>

    <!-- Bit index of gene statistics -->
    <bean name="statisticsStorageFactory" class="uk.ac.ebi.gxa.index.StatisticsStorageFactory">
        <property name="atlasIndex" ref="atlasIndex"/>
        <constructor-arg value="bitstats"/>
    </bean>

    <bean name="statisticsStorage"
          factory-bean="statisticsStorageFactory"
          factory-method="createStatisticsStorage"/>

    <bean name="efo" class="uk.ac.ebi.gxa.efo.EfoImpl" destroy-method="close" init-method="init">
        <property name="uri" ref="atlasEfo"/>
        <!-- experimental debugging EFO cache feature -->
        <property name="cache">
            <bean class="java.io.File">
                <constructor-arg value="${atlas.efo.cache}"/>
            </bean>
        </property>
    </bean>

    <bean name="annotator" class="uk.ac.ebi.gxa.anatomogram.AnatomogramFactory" init-method="load">
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
        <property name="efo" ref="efo"/>
    </bean>

    <!-- Atlas properties -->
    <bean name="atlasProperties" class="uk.ac.ebi.gxa.properties.AtlasProperties">
        <property name="storage">
            <bean class="uk.ac.ebi.gxa.properties.ChainedStorage">
                <property name="storages">
                    <util:list>
                        <bean class="uk.ac.ebi.gxa.properties.DbStorage">
                            <property name="jdbcTemplate" ref="atlasJdbcTemplate"/>
                        </bean>
                        <bean class="uk.ac.ebi.gxa.properties.ResourceFileStorage">
                            <property name="resourcePath" value="Curated.properties"/>
                        </bean>
                        <bean class="uk.ac.ebi.gxa.properties.ResourceFileStorage">
                            <property name="resourcePath" value="atlas.properties"/>
                        </bean>
                        <bean class="uk.ac.ebi.gxa.properties.EfHeadersStorage">
                            <property name="efvService" ref="atlasEfvService"/>
                        </bean>
                        <bean class="uk.ac.ebi.gxa.properties.GenePropHeadersStorage">
                            <property name="genePropService" ref="atlasGenePropertyService"/>
                        </bean>
                        <bean class="uk.ac.ebi.gxa.properties.RServicePropertyStorage">
                            <property name="dataSource" ref="atlasDataSource"/>
                            <property name="resourcePath" value="rservice.properties"/>
                        </bean>
                        <bean class="uk.ac.ebi.gxa.properties.DirectoryBasedStorage">
                            <property name="external" value="true"/>
                            <property name="atlasProperties" ref="atlasProperties"/>
                            <property name="directoryPath" value="look"/>
                            <property name="namePrefix" value="atlas.look."/>
                        </bean>
                        <bean class="uk.ac.ebi.gxa.properties.DirectoryBasedStorage">
                            <property name="directoryPath" value="look"/>
                            <property name="namePrefix" value="atlas.look."/>
                        </bean>
                    </util:list>
                </property>
            </bean>
        </property>
    </bean>

    <!-- Loader component -->

    <bean name="atlasLoader" class="uk.ac.ebi.gxa.loader.DefaultAtlasLoader">
        <!-- DAO for data access, ready-to-use -->
        <property name="magetabLoader" ref="MAGETABLoader"/>
        <property name="arrayDesignLoader" ref="arrayDesignLoader"/>
        <property name="netCDFUpdaterService" ref="netCDFUpdaterService"/>
        <property name="experimentUnloaderService" ref="experimentUnloaderService"/>
        <property name="virtualArrayDesignLoader" ref="virtualArrayDesignLoader"/>
        <property name="bioentityAnnotationLoader" ref="bioentityAnnotationLoader"/>
        <property name="designMappingLoader" ref="arrayDesignMappingLoader"/>
        <property name="dataReleaseService" ref="atlasDataReleaseService"/>
        <property name="experimentEditorService" ref="experimentEditorService"/>
        <property name="executor" ref="threadPool"/>
    </bean>

    <bean name="experimentEditorService" class="uk.ac.ebi.gxa.loader.service.ExperimentEditorService">
        <property name="atlasDAO" ref="atlasDAO"/>
    </bean>


    <bean name="arrayDesignMappingLoader" class="uk.ac.ebi.gxa.loader.bioentity.ArrayDesignMappingLoader">
        <property name="bioEntityDAO" ref="bioEntityDAO"/>
        <property name="txManager" ref="atlasTxManager"/>
    </bean>

    <bean name="bioentityAnnotationLoader" class="uk.ac.ebi.gxa.loader.bioentity.AtlasBioentityAnnotationLoader">
        <property name="bioEntityDAO" ref="bioEntityDAO"/>
        <property name="txManager" ref="atlasTxManager"/>
    </bean>

    <bean name="arrayDesignLoader" class="uk.ac.ebi.gxa.loader.service.AtlasArrayDesignLoader">
        <property name="atlasDAO" ref="atlasDAO"/>
    </bean>

    <bean name="atlasDataReleaseService" class="uk.ac.ebi.gxa.loader.service.AtlasDataReleaseService">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
    </bean>

    <bean name="experimentUnloaderService" class="uk.ac.ebi.gxa.loader.service.AtlasExperimentUnloaderService">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
    </bean>

    <bean name="MAGETABLoader" class="uk.ac.ebi.gxa.loader.service.AtlasMAGETABLoader">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
        <property name="atlasComputeService" ref="atlasComputeService"/>
        <property name="unloaderService" ref="experimentUnloaderService"/>
    </bean>

    <bean name="netCDFUpdaterService" class="uk.ac.ebi.gxa.loader.service.AtlasNetCDFUpdaterService">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
    </bean>

    <bean name="virtualArrayDesignLoader" class="uk.ac.ebi.gxa.loader.service.AtlasVirtualArrayDesignLoader">
        <property name="atlasDAO" ref="atlasDAO"/>
    </bean>

    <!-- Index Builder component -->
    <bean name="indexBuilderServiceProperties"
          class="uk.ac.ebi.gxa.index.builder.service.PropertiesIndexBuilderService">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="solrServer" ref="solrServerProp"/>
    </bean>

    <bean name="indexBuilderServiceExperiments"
          class="uk.ac.ebi.gxa.index.builder.service.ExperimentAtlasIndexBuilderService">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="solrServer" ref="solrServerExpt"/>
        <property name="executor" ref="threadPool"/>
    </bean>

    <bean name="indexBuilderServiceGenes" class="uk.ac.ebi.gxa.index.builder.service.GeneAtlasIndexBuilderService">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="bioEntityDAO" ref="bioEntityDAO"/>
        <property name="solrServer" ref="solrServerAtlas"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="executor" ref="threadPool"/>
    </bean>

    <bean name="bitIndexBuilderServiceGenes"
          class="uk.ac.ebi.gxa.index.builder.service.GeneAtlasBitIndexBuilderService">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="atlasIndex" ref="atlasIndex"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
        <property name="executor" ref="threadPool"/>
        <constructor-arg value="bitstats"/>

    </bean>

    <bean name="indexBuilder" class="uk.ac.ebi.gxa.index.builder.DefaultIndexBuilder">
        <property name="services">
            <util:list>
                <ref bean="bitIndexBuilderServiceGenes"/>
                <ref bean="indexBuilderServiceExperiments"/>
                <ref bean="indexBuilderServiceProperties"/>
                <ref bean="indexBuilderServiceGenes"/>
            </util:list>
        </property>
        <!-- configures behaviour of indexBuilder, whether we want genes and experiments -->
        <property name="includeIndexes">
            <util:list>
                <value>bitstats</value>
                <value>experiments</value>
                <value>properties</value>
                <value>genes</value>
            </util:list>
        </property>
        <property name="executor" ref="threadPool"/>
    </bean>

    <!-- Analytics Generator component -->

    <bean name="experimentAnalyticsService"
          class="uk.ac.ebi.gxa.analytics.generator.service.ExperimentAnalyticsGeneratorService">
        <constructor-arg index="0" ref="atlasDAO"/>
        <constructor-arg index="1" ref="atlasNetCDFDAO"/>
        <constructor-arg index="2" ref="atlasComputeService"/>
        <constructor-arg index="3" ref="threadPool"/>
    </bean>

    <bean name="analyticsGenerator" class="uk.ac.ebi.gxa.analytics.generator.DefaultAnalyticsGenerator"
          init-method="startup">
        <property name="executor" ref="threadPool"/>
        <property name="analyticsService" ref="experimentAnalyticsService"/>
    </bean>

    <!-- Web interface component -->

    <bean name="geneSolrDAO" class="ae3.dao.GeneSolrDAO">
        <property name="geneSolr" ref="solrServerAtlas"/>
    </bean>

    <bean name="experimentSolrDAO" class="ae3.dao.ExperimentSolrDAO">
        <property name="experimentSolr" ref="solrServerExpt"/>
    </bean>

    <bean name="atlasEfvService" class="ae3.service.structuredquery.AtlasEfvService">
        <property name="solrServerProp" ref="solrServerProp"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
        <property name="atlasDAO" ref="atlasDAO"/>
        <!-- needs it for cache updates -->
        <property name="indexBuilder" ref="indexBuilder"/>
    </bean>

    <bean name="atlasEfoService" class="ae3.service.structuredquery.AtlasEfoService">
        <property name="efo" ref="efo"/>
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
        <!-- needs it for cache updates -->
        <property name="indexBuilder" ref="indexBuilder"/>
    </bean>

    <bean name="atlasGenePropertyService" class="ae3.service.structuredquery.AtlasGenePropertyService">
        <property name="solrServerAtlas" ref="solrServerAtlas"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <!-- needs it for cache updates -->
        <property name="indexBuilder" ref="indexBuilder"/>
    </bean>


    <bean name="atlasExperimentAnalyticsViewService" class="ae3.service.experiment.AtlasExperimentAnalyticsViewService">
        <property name="geneSolrDAO" ref="geneSolrDAO"/>
        <property name="computeService" ref="atlasComputeService"/>
    </bean>

    <bean name="atlasStatisticsQueryService" class="ae3.service.AtlasBitIndexQueryService">
        <!-- needs it for cache updates -->
        <property name="efo" ref="efo"/>
        <property name="indexBuilder" ref="indexBuilder"/>
        <property name="statisticsStorage" ref="statisticsStorage"/>
        <property name="atlasIndex" ref="atlasIndex"/>
        <constructor-arg value="bitstats"/>
    </bean>

    <bean name="atlasQueryService" class="ae3.service.structuredquery.AtlasStructuredQueryService">
        <property name="solrServerAtlas" ref="solrServerAtlas"/>
        <property name="solrServerExpt" ref="solrServerExpt"/>
        <property name="solrServerProp" ref="solrServerProp"/>
        <property name="efoService" ref="atlasEfoService"/>
        <property name="efvService" ref="atlasEfvService"/>
        <property name="genePropService" ref="atlasGenePropertyService"/>
        <property name="efo" ref="efo"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
        <property name="experimentSolrDAO" ref="experimentSolrDAO"/>

        <!-- needs it for cache updates -->
        <property name="indexBuilder" ref="indexBuilder"/>

        <!-- hack: it doesn't need to know about core container,
but it uses it to close searcher and clean cache to prevent OOMs -->
        <property name="coreContainer" ref="solrContainer"/>
    </bean>

    <!-- interface compute executor -->
    <bean name="atlasComputeService" class="uk.ac.ebi.gxa.analytics.compute.AtlasComputeService"
          destroy-method="shutdown">
        <property name="atlasRFactory" ref="atlasRFactory"/>
    </bean>
    <!-- interface download executor -->
    <bean name="atlasDownloadService" class="ae3.service.AtlasDownloadService"
          destroy-method="shutdown">
        <property name="atlasQueryService" ref="atlasQueryService"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="downloadThreadPool" ref="threadPool"/>
    </bean>

    <!-- interface plotter -->
    <bean name="atlasPlotter" class="uk.ac.ebi.gxa.web.AtlasPlotter">
        <property name="atlasDatabaseDAO" ref="atlasDAO"/>
        <property name="geneSolrDAO" ref="geneSolrDAO"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
    </bean>

    <!-- Task manager -->
    <bean name="taskManagerStorage" class="uk.ac.ebi.gxa.tasks.DbStorage">
        <property name="jdbcTemplate" ref="atlasJdbcTemplate"/>
    </bean>

    <bean name="taskManager" class="uk.ac.ebi.gxa.tasks.TaskManager">
        <property name="analyticsGenerator" ref="analyticsGenerator"/>
        <property name="indexBuilder" ref="indexBuilder"/>
        <property name="loader" ref="atlasLoader"/>
        <property name="storage" ref="taskManagerStorage"/>
        <property name="maxWorkingTasks" value="16"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="atlasDAO" ref="atlasDAO"/>
    </bean>

    <!-- Servlets (actually, HttpRequestHandlers) -->

    <bean name="queryRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.query.AtlasQueryRequestHandler">
        <property name="queryService" ref="atlasQueryService"/>
        <property name="downloadService" ref="atlasDownloadService"/>
        <property name="indexBuilder" ref="indexBuilder"/>
        <property name="atlasProperties" ref="atlasProperties"/>
    </bean>

    <bean name="autocompleterRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.helper.FactorValuesRequestHandler">
        <property name="autoCompleters">
            <util:map>
                <entry key="gene">
                    <util:list>
                        <ref bean="atlasGenePropertyService"/>
                    </util:list>
                </entry>
                <entry key="efv">
                    <util:list>
                        <ref bean="atlasEfvService"/>
                    </util:list>
                </entry>
                <entry key="efo">
                    <util:list>
                        <ref bean="atlasEfoService"/>
                    </util:list>
                </entry>
                <entry key="efoefv">
                    <util:list>
                        <ref bean="atlasEfoService"/>
                        <ref bean="atlasEfvService"/>
                    </util:list>
                </entry>
            </util:map>
        </property>
    </bean>

    <bean name="efoRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.helper.EfoRequestHandler">
        <property name="efoService" ref="atlasEfoService"/>
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
    </bean>

    <bean name="apiQueryRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.api.ApiQueryRequestHandler">
        <property name="geneSolrDAO" ref="geneSolrDAO"/>
        <property name="experimentSolrDAO" ref="experimentSolrDAO"/>
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="queryService" ref="atlasQueryService"/>
        <property name="indexBuilder" ref="indexBuilder"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="atlasExperimentAnalyticsViewService" ref="atlasExperimentAnalyticsViewService"/>
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
    </bean>

    <bean name="experimentsRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.query.ExperimentsPopupRequestHandler">
        <property name="geneSolrDAO" ref="geneSolrDAO"/>
        <property name="experimentSolrDAO" ref="experimentSolrDAO"/>
        <property name="efo" ref="efo"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
    </bean>

    <bean name="geneIdsDownloadRequestHandler"
          class="uk.ac.ebi.gxa.requesthandlers.dump.GeneIdentifiersDumpDownloadRequestHandler"
          init-method="afterPropertiesSet" destroy-method="destroy">
        <property name="coreContainer" ref="solrContainer"/>
        <property name="indexBuilder" ref="indexBuilder"/>
        <property name="atlasProperties" ref="atlasProperties"/>
    </bean>

    <bean name="ebeyeDownloadRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.dump.GeneEbeyeDumpRequestHandler"
          init-method="afterPropertiesSet" destroy-method="destroy">
        <property name="geneSolrDAO" ref="geneSolrDAO"/>
        <property name="experimentSolrDAO" ref="experimentSolrDAO"/>
        <property name="indexBuilder" ref="indexBuilder"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="atlasStatisticsQueryService" ref="atlasStatisticsQueryService"/>
    </bean>


    <bean name="experimentPropertiesDumpRequestHandler"
          class="uk.ac.ebi.gxa.requesthandlers.dump.ExperimentPropertiesDumpRequestHandler"
          init-method="afterPropertiesSet">
        <property name="atlasDAO" ref="atlasDAO"/>
        <property name="atlasProperties" ref="atlasProperties"/>

    </bean>

    <bean name="sitemapDownloadRequestHandler"
          class="uk.ac.ebi.gxa.requesthandlers.dump.GoogleSitemapXmlRequestHandler">
        <property name="coreContainer" ref="solrContainer"/>
        <property name="indexBuilder" ref="indexBuilder"/>
        <property name="atlasProperties" ref="atlasProperties"/>
    </bean>

    <bean name="listviewDownloadRequestHandler"
          class="uk.ac.ebi.gxa.requesthandlers.download.DownloadFileRequestHandler">
    </bean>


    <bean name="wiggleRequestHandler"
          class="uk.ac.ebi.gxa.requesthandlers.wiggle.WiggleRequestHandler">
        <property name="atlasNetCDFDAO" ref="atlasNetCDFDAO"/>
        <property name="atlasDAO" ref="atlasDAO"/>
    </bean>

    <bean name="dataDownloadRequestHandler"
          class="uk.ac.ebi.gxa.requesthandlers.download.DataDownloadRequestHandler">
        <property name="atlasDataRepo" ref="atlasDataRepo"/>
    </bean>

    <bean name="plotterRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.helper.PlotterRequestHandler">
        <property name="plotter" ref="atlasPlotter"/>
    </bean>

    <bean name="downloadsProgressRequestHandler"
          class="uk.ac.ebi.gxa.requesthandlers.download.DownloadProgressRequestHandler">
        <property name="downloadService" ref="atlasDownloadService"/>
    </bean>

    <bean name="feedbackRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.helper.FeedbackRequestHandler">
        <property name="atlasProperties" ref="atlasProperties"/>
    </bean>

    <bean name="adminRequestHandler" class="uk.ac.ebi.gxa.requesthandlers.tasks.AdminRequestHandler">
        <property name="taskManager" ref="taskManager"/>
        <property name="dao" ref="atlasDAO"/>
        <property name="taskManagerDbStorage" ref="taskManagerStorage"/>
        <property name="atlasProperties" ref="atlasProperties"/>
        <property name="atlasManager" ref="atlasManager"/>
    </bean>

    <bean name="stringTemplateLoader" class="ae3.util.StringTemplateLoader">
        <constructor-arg ref="atlasProperties"/>
    </bean>

    <!-- JMX -->
    <bean id="namingStrategy" class="uk.ac.ebi.gxa.jmx.PerInstanceNamingStrategy">
        <property name="domain" value="GXAtlas"/>
    </bean>

    <bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="registrationBehaviorName" value="REGISTRATION_IGNORE_EXISTING"/>
        <property name="beans">
            <util:map>
                <entry key="AtlasManager" value-ref="atlasManager"/>
            </util:map>
        </property>
        <property name="namingStrategy" ref="namingStrategy"/>
    </bean>

    <bean id="atlasManager" class="uk.ac.ebi.gxa.jmx.AtlasManager">
        <property name="atlasIndex" ref="atlasIndex"/>
        <property name="atlasDataRepo" ref="atlasDataRepo"/>
        <property name="dataSource" ref="atlasDataSource"/>
        <property name="efo" ref="efo"/>
        <property name="atlasProperties" ref="atlasProperties"/>
    </bean>

    <!-- Required spring driven data access configuration -->

    <!-- Spring JDBC template for database queries -->
    <bean name="atlasJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- datasource bean, from JNDI -->
        <property name="dataSource" ref="atlasDataSource"/>
        <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
    </bean>

    <bean id="atlasTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="atlasDataSource"/>
    </bean>

    <!-- Configure atlasNetCDFDAO for this datasource -->
    <bean name="atlasNetCDFDAO" class="uk.ac.ebi.gxa.netcdf.reader.AtlasNetCDFDAO">
        <property name="atlasDataRepo" ref="atlasDataRepo"/>
        <property name="experimentDAO" ref="atlasDAO"/>
    </bean>

    <bean name="atlasDAO" class="uk.ac.ebi.gxa.dao.AtlasDAO">
        <property name="jdbcTemplate" ref="atlasJdbcTemplate"/>
        <property name="arrayDesignDAO" ref="arrayDesignDAO"/>
        <property name="bioEntityDAO" ref="bioEntityDAO"/>
    </bean>

    <bean name="bioEntityDAO" class="uk.ac.ebi.gxa.dao.BioEntityDAO">
        <property name="jdbcTemplate" ref="atlasJdbcTemplate"/>
        <property name="softwareDAO" ref="softwareDAO"/>
    </bean>

    <bean name="arrayDesignDAO" class="uk.ac.ebi.gxa.dao.ArrayDesignDAO">
        <property name="jdbcTemplate" ref="atlasJdbcTemplate"/>
        <property name="softwareDAO" ref="softwareDAO"/>
    </bean>

    <bean name="softwareDAO" class="uk.ac.ebi.gxa.dao.SoftwareDAO">
        <property name="jdbcTemplate" ref="atlasJdbcTemplate"/>
    </bean>

    <!-- Common spring-drive data access configuration -->
    <!-- native extractor for fetching oracle connections from pool wrapper etc -->
    <bean name="nativeJdbcExtractor"
          class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"/>

    <!--Configure R workbench -->
    <!-- note that no-arg factory method reads R.properties from classpath, and possibly rservice.properties too -->
    <bean name="atlasRFactory" class="uk.ac.ebi.gxa.R.DynamicAtlasRFactory" init-method="init" destroy-method="destroy">
        <property name="atlasProperties" ref="atlasProperties"/>
    </bean>

    <bean name="gxaS4DasDataSource" class="ae3.service.GxaS4DasDataSource">
    </bean>

    <!-- Configuration for JNDI resource lookup -->
    <jee:jndi-lookup id="atlasDataSource"
                     jndi-name="/jdbc/ATLAS2"
                     resource-ref="true"/>

    <jee:jndi-lookup id="atlasIndex"
                     jndi-name="/file/GXAINDEX"
                     resource-ref="true"/>

    <jee:jndi-lookup id="atlasDataRepo"
                     jndi-name="/file/GXANETCDFS"
                     resource-ref="true"/>

    <jee:jndi-lookup id="atlasEfo"
                     jndi-name="/uri/GXAEFO"
                     resource-ref="true"/>

</beans>
